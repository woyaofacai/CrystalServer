package com.crystal.conf;

import java.io.File;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.dom4j.Document;
import org.dom4j.DocumentException;
import org.dom4j.Element;
import org.dom4j.io.SAXReader;

import com.crystal.servlet.ServletConfigImpl;


public class WebConfiguration {
	
	private Map<String, ServletConfigImpl> urlNameMap = new HashMap<String, String>();
	private Map<String, ServletConfigImpl> nameConfMap = new HashMap<String, ServletConfigImpl>();
	
	public WebConfiguration(String appName) throws DocumentException {
		String path = getWebXmlPath(appName);
		SAXReader reader = new SAXReader();
        Document document = reader.read(path);
        
        Element root = document.getRootElement();
        
		List<Element> servletNodes = root.elements("servlet");
        for(Element e : servletNodes) {
        	parseServletElement(e);
        }
        
        List<Element> servletMappingElements = root.elements("servlet-mapping");
        
	}
	
	private void parseServletElement(Element e) {
		Element nameElement = e.element("servlet-name");
		if(nameElement == null)
			return;
		Element clazzElement = e.element("servlet-class");
		if(clazzElement == null)
			return;
		
		String name = nameElement.getText();
		String clazzName = clazzElement.getText();
		int startup = -1;
		Element startupElement = e.element("load-on-startup");
		if(startupElement != null) {
			startup = Integer.parseInt(startupElement.getText());
		}
		
		Map<String, String> parameters = new HashMap<String, String>();
		List<Element> paramElements = e.elements("init-param");
		for(Element paramElement: paramElements) {
			Element paramNameElement = paramElement.element("param-name");
			Element paramValueElement = paramElement.element("param-value");
			if(paramNameElement != null && paramValueElement != null) {
				String paramName = paramNameElement.getText();
				String paramValue = paramValueElement.getText();
				parameters.put(paramName, paramValue);
			}
		}
		
		ServletConfigImpl conf = new ServletConfigImpl(name, parameters, null, clazzName, startup);
		nameConfMap.put(name, conf);
	}
	
	
	
	public String getWebXmlPath(String appName) {
		return System.getProperty("user.dir") + File.separator + "webapps" + 
				File.separator + appName + File.separator + "WEB_INF" + File.separator + "web.xml";
	}
}
